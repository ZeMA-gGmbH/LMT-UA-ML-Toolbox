classdef Factory < handle
    %FACTORY Summary of this class goes here
    %   Detailed explanation goes here
    
    properties 
    end
    
    methods (Static)
        %ToDo: rewrite functions to prevent retraining the feature
        %extraction algorithms
        
        function obj = MultisensPCAPearsonLDAMahal(varargin)
            obj = SimpleTrainingStack({@MultisensorExtractor, @Pearson, @NumFeatRanking, @LDAMahalClassifier}, ...
                {{@PCAExtractor}, {500}, {}, {}});
        end
        
        function obj = MultisensBFCPearsonLDAMahal(varargin)
            obj = SimpleTrainingStack({@MultisensorExtractor, @Pearson, @NumFeatRanking, @LDAMahalClassifier}, ...
                {{@BFCExtractor}, {500}, {}, {}});
        end
        
        function obj = MultisensBDWPearsonLDAMahal(varargin)
            obj = SimpleTrainingStack({@MultisensorExtractor, @Pearson, @NumFeatRanking, @LDAMahalClassifier}, ...
                {{@BDWExtractor}, {500}, {}, {}});
        end
        
        function obj = MultisensStatMomPearsonLDAMahal(varargin)
            obj = SimpleTrainingStack({@MultisensorExtractor, @Pearson, @NumFeatRanking, @LDAMahalClassifier}, ...
                {{@StatisticalMoments}, {500}, {}, {}});
        end
        
        function obj = MultisensALAPearsonLDAMahal(varargin)
            obj = SimpleTrainingStack({@MultisensorExtractor, @Pearson, @NumFeatRanking, @LDAMahalClassifier}, ...
                {{@ALAExtractor}, {500}, {}, {}});
        end
        
        function obj = MultisensPCARELIEFFLDAMahal(varargin)
            obj = SimpleTrainingStack({@MultisensorExtractor, @Pearson, @NumFeatRanking, @LDAMahalClassifier}, ...
                {{@PCAExtractor}, {500}, {@RELIEFF}, {}});
        end
        
        function obj = MultisensBFCRELIEFFLDAMahal(varargin)
            obj = SimpleTrainingStack({@MultisensorExtractor, @Pearson, @NumFeatRanking, @LDAMahalClassifier}, ...
                {{@BFCExtractor}, {500}, {@RELIEFF}, {}});
        end
        
        function obj = MultisensBDWRELIEFFLDAMahal(varargin)
            obj = SimpleTrainingStack({@MultisensorExtractor, @Pearson, @NumFeatRanking, @LDAMahalClassifier}, ...
                {{@BDWExtractor}, {500}, {@RELIEFF}, {}});
        end
        
        function obj = MultisensALARELIEFFLDAMahal(varargin)
            obj = SimpleTrainingStack({@MultisensorExtractor, @Pearson, @NumFeatRanking, @LDAMahalClassifier}, ...
                {{@ALAExtractor}, {500}, {@RELIEFF}, {}});
        end
        
        function obj = MultisensStatMomRELIEFFLDAMahal(varargin)
            obj = SimpleTrainingStack({@MultisensorExtractor, @Pearson, @NumFeatRanking, @LDAMahalClassifier}, ...
                {{@StatisticalMoments}, {500}, {@RELIEFF}, {}});
        end
        
        function obj = MultisensPCARFESVMLDAMahal(varargin)
            obj = SimpleTrainingStack({@MultisensorExtractor, @Pearson, @NumFeatRanking, @LDAMahalClassifier}, ...
                {{@PCAExtractor}, {500}, {@RFESVM}, {}});
        end
        
        function obj = MultisensBFCRFESVMLDAMahal(varargin)
            obj = SimpleTrainingStack({@MultisensorExtractor, @Pearson, @NumFeatRanking, @LDAMahalClassifier}, ...
                {{@BFCExtractor}, {500}, {@RFESVM}, {}});
        end
        
        function obj = MultisensBDWRFESVMLDAMahal(varargin)
            obj = SimpleTrainingStack({@MultisensorExtractor, @Pearson, @NumFeatRanking, @LDAMahalClassifier}, ...
                {{@BDWExtractor}, {500}, {@RFESVM}, {}});
        end
        
        function obj = MultisensALARFESVMLDAMahal(varargin)
            obj = SimpleTrainingStack({@MultisensorExtractor, @Pearson, @NumFeatRanking, @LDAMahalClassifier}, ...
                {{@ALAExtractor}, {500}, {@RFESVM}, {}});
        end
        
        function obj = MultisensStatMomRFESVMLDAMahal(varargin)
            obj = SimpleTrainingStack({@MultisensorExtractor, @Pearson, @NumFeatRanking, @LDAMahalClassifier}, ...
                {{@StatisticalMoments}, {500}, {@RFESVM}, {}});
        end
        
        function obj = MultisensSteffenRFESVMLDAMahal(varargin)
            obj = SimpleTrainingStack({@MultisensorExtractor, @Pearson, @NumFeatRanking, @LDAMahalClassifier}, ...
                {{@SteffenExtractor, {1,12}}, {500}, {@RFESVM}, {}});
        end
        
        function obj = MultisensSteffenRELIEFFLDAMahal(varargin)
            obj = SimpleTrainingStack({@MultisensorExtractor, @Pearson, @NumFeatRanking, @LDAMahalClassifier}, ...
                {{@SteffenExtractor, {1,12}}, {500}, {@RELIEFF}, {}});
        end
        
        function obj = MultisensSteffenPearsonLDAMahal(varargin)
            obj = SimpleTrainingStack({@MultisensorExtractor, @Pearson, @NumFeatRanking, @LDAMahalClassifier}, ...
                {{@SteffenExtractor, {1,12}}, {500}, {@Pearson}, {}});
        end
        
        %%%%%%%%%%%%%
        function obj = MultisensPCAPearsonPLSR(PLSRComp)
            obj = SimpleTrainingStack({@MultisensorExtractor, @Pearson, @NumFeatRanking, @PLSR}, ...
                {{@PCAExtractor}, {500}, {@Pearson,{@PLSR},{{PLSRComp}},@RMSE.loss}, {PLSRComp}});
        end
        
        function obj = MultisensBFCPearsonPLSR(PLSRComp)
            obj = SimpleTrainingStack({@MultisensorExtractor, @Pearson, @NumFeatRanking, @PLSR}, ...
                {{@BFCExtractor}, {500}, {@Pearson,{@PLSR},{{PLSRComp}},@RMSE.loss}, {PLSRComp}});
        end
        
        function obj = MultisensBDWPearsonPLSR(PLSRComp)
            obj = SimpleTrainingStack({@MultisensorExtractor, @Pearson, @NumFeatRanking, @PLSR}, ...
                {{@BDWExtractor}, {500}, {@Pearson,{@PLSR},{{PLSRComp}},@RMSE.loss}, {PLSRComp}});
        end
        
        function obj = MultisensStatMomPearsonPLSR(PLSRComp)
            obj = SimpleTrainingStack({@MultisensorExtractor, @Pearson, @NumFeatRanking, @PLSR}, ...
                {{@StatisticalMoments}, {500}, {@Pearson,{@PLSR},{{PLSRComp}},@RMSE.loss}, {PLSRComp}});
        end
        
        function obj = MultisensALAPearsonPLSR(PLSRComp)
            obj = SimpleTrainingStack({@MultisensorExtractor, @Pearson, @NumFeatRanking, @PLSR}, ...
                {{@ALAExtractor}, {500}, {@Pearson,{@PLSR},{{PLSRComp}},@RMSE.loss}, {PLSRComp}});
        end
        
        function obj = MultisensPCARELIEFFPLSR(PLSRComp)
            obj = SimpleTrainingStack({@MultisensorExtractor, @Pearson, @NumFeatRanking, @PLSR}, ...
                {{@PCAExtractor}, {500}, {@RELIEFF,{@PLSR},{{PLSRComp}},@RMSE.loss}, {PLSRComp}});
        end
        
        function obj = MultisensBFCRELIEFFPLSR(PLSRComp)
            obj = SimpleTrainingStack({@MultisensorExtractor, @Pearson, @NumFeatRanking, @PLSR}, ...
                {{@BFCExtractor}, {500}, {@RELIEFF,{@PLSR},{{PLSRComp}},@RMSE.loss}, {PLSRComp}});
        end
        
        function obj = MultisensBDWRELIEFFPLSR(PLSRComp)
            obj = SimpleTrainingStack({@MultisensorExtractor, @Pearson, @NumFeatRanking, @PLSR}, ...
                {{@BDWExtractor}, {500}, {@RELIEFF,{@PLSR},{{PLSRComp}},@RMSE.loss}, {PLSRComp}});
        end
        
        function obj = MultisensALARELIEFFPLSR(PLSRComp)
            obj = SimpleTrainingStack({@MultisensorExtractor, @Pearson, @NumFeatRanking, @PLSR}, ...
                {{@ALAExtractor}, {500}, {@RELIEFF,{@PLSR},{{PLSRComp}},@RMSE.loss}, {PLSRComp}});
        end
        
        function obj = MultisensStatMomRELIEFFPLSR(PLSRComp)
            obj = SimpleTrainingStack({@MultisensorExtractor, @Pearson, @NumFeatRanking, @PLSR}, ...
                {{@StatisticalMoments}, {500}, {@RELIEFF,{@PLSR},{{PLSRComp}},@RMSE.loss}, {PLSRComp}});
        end
        
        function obj = MultisensPCARFESVMPLSR(PLSRComp)
            obj = SimpleTrainingStack({@MultisensorExtractor, @Pearson, @NumFeatRanking, @PLSR}, ...
                {{@PCAExtractor}, {500}, {@RFESVM,{@PLSR},{{PLSRComp}},@RMSE.loss}, {PLSRComp}});
        end
        
        function obj = MultisensBFCRFESVMPLSR(PLSRComp)
            obj = SimpleTrainingStack({@MultisensorExtractor, @Pearson, @NumFeatRanking,@PLSR}, ...
                {{@BFCExtractor}, {500}, {@RFESVM,{@PLSR},{{PLSRComp}},@RMSE.loss}, {PLSRComp}});
        end
        
        function obj = MultisensBDWRFESVMPLSR(PLSRComp)
            obj = SimpleTrainingStack({@MultisensorExtractor, @Pearson, @NumFeatRanking, @PLSR}, ...
                {{@BDWExtractor}, {500}, {@RFESVM,{@PLSR},{{PLSRComp}},@RMSE.loss}, {PLSRComp}});
        end
        
        function obj = MultisensALARFESVMPLSR(PLSRComp)
            obj = SimpleTrainingStack({@MultisensorExtractor, @Pearson, @NumFeatRanking, @PLSR}, ...
                {{@ALAExtractor}, {500}, {@RFESVM,{@PLSR},{{PLSRComp}},@RMSE.loss}, {PLSRComp}});
        end
        
        function obj = MultisensStatMomRFESVMPLSR(PLSRComp)
            obj = SimpleTrainingStack({@MultisensorExtractor, @Pearson, @NumFeatRanking, @PLSR}, ...
                {{@StatisticalMoments}, {500}, {@RFESVM,{@PLSR},{{PLSRComp}},@RMSE.loss}, {PLSRComp}});
        end
        
       
        
        function obj = FullToolboxMultisens(varargin)
            obj = ClassificationAlgorithmSelector({...
                {@Factory.MultisensBFCRFESVMLDAMahal},...
                {@Factory.MultisensBDWRFESVMLDAMahal},...
                {@Factory.MultisensPCARFESVMLDAMahal},...
                {@Factory.MultisensALARFESVMLDAMahal},...
                {@Factory.MultisensStatMomRFESVMLDAMahal},...
                {@Factory.MultisensBFCRELIEFFLDAMahal},...
                {@Factory.MultisensBDWRELIEFFLDAMahal},...
                {@Factory.MultisensPCARELIEFFLDAMahal},...
                {@Factory.MultisensALARELIEFFLDAMahal},...
                {@Factory.MultisensStatMomRELIEFFLDAMahal},...
                {@Factory.MultisensBFCPearsonLDAMahal},...
                {@Factory.MultisensBDWPearsonLDAMahal},...
                {@Factory.MultisensPCAPearsonLDAMahal},...
                {@Factory.MultisensALAPearsonLDAMahal},...
                {@Factory.MultisensStatMomPearsonLDAMahal},...
                }, {});
        end
        
        function obj = FullToolboxMultisensPLSR(PLSRComp,cvC)
            obj = RegressionAlgorithmSelector({...
                %{@Factory.MultisensBFCRFESVMPLSR},...
                %{@Factory.MultisensBDWRFESVMPLSR},...
                %{@Factory.MultisensPCARFESVMPLSR},...
                %{@Factory.MultisensALARFESVMPLSR},...
                %{@Factory.MultisensStatMomRFESVMPLSR},...
                %{@Factory.MultisensBFCRELIEFFPLSR},...
                %{@Factory.MultisensBDWRELIEFFPLSR},...
                %{@Factory.MultisensPCARELIEFFPLSR},...
                %{@Factory.MultisensALARELIEFFPLSR},...
                %{@Factory.MultisensStatMomRELIEFFPLSR},...
                {@Factory.MultisensBFCPearsonPLSR},...
                {@Factory.MultisensBDWPearsonPLSR},...
                {@Factory.MultisensPCAPearsonPLSR},...
                {@Factory.MultisensALAPearsonPLSR},...
                {@Factory.MultisensStatMomPearsonPLSR},...
                }, {%{{PLSRComp}},...
                %{{PLSRComp}},...
                %{{PLSRComp}},...
                %{{PLSRComp}},...
                %{{PLSRComp}},...
                %{{PLSRComp}},...
                %{{PLSRComp}},...
                %{{PLSRComp}},...
                %{{PLSRComp}},...
                %{{PLSRComp}},...
                {{PLSRComp}},...
                {{PLSRComp}},...
                {{PLSRComp}},...
                {{PLSRComp}},...
                {{PLSRComp}}
                },cvC);
        end
        
        function obj = BestSteffenExt(varargin)
            obj = ClassificationAlgorithmSelector({...
                {@Factory.MultisensSteffenRFESVMLDAMahal},...
                {@Factory.MultisensSteffenRELIEFFLDAMahal},...
                {@Factory.MultisensSteffenPearsonLDAMahal},...
                }, {});
        end

        function obj = EMCDataOnlyPearson(varargin)
            obj = ClassificationAlgorithmSelector({...
                {@Factory.MultisensBFCPearsonLDAMahal},...
                {@Factory.MultisensBDWPearsonLDAMahal},...
                {@Factory.MultisensPCAPearsonLDAMahal},...
                {@Factory.MultisensALAPearsonLDAMahal},...
                {@Factory.MultisensStatMomPearsonLDAMahal},...
                }, {});
        end
        
        function obj = EMCBestCombination(varargin)
            obj = ClassificationAlgorithmSelector({...
                {@Factory.MultisensBFCRFESVMLDAMahal},...
                }, {});
        end
    end
end

